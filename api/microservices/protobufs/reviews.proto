syntax = "proto3";

/* 
At the moment itÂ´s being requested:
	The review by ID;
	All the reviews of a game. 
*/

// ######################
// ###### REQUESTS ###### 
// ######################

// Search a review by ID
message ReviewByIdRequest {
	string review_id = 1;
}

// Search for reviews by game
message ReviewsByGameRequest {
    string app_id = 1;
	int32 max_results = 2;
}

message UpdateReviewByIdRequest {
	string review_id = 1;
	string review = 2;
	string recommended = 3;
}

message UpdateHelpfulOnReviewByIdRequest {
	string review_id = 1;
	string votes_helpful = 2; 
}

message ReviewsByLanguageRequest {
	string language = 1;
	int32 max_results = 2;
}

message ReviewsByUserIdRequest {
	string author_steam_id = 1;
	int32 max_results = 2;
}

message ReviewsByHelpfulRequest {
	string votes_helpful = 1;
	int32 max_results = 2;
}



// ######################
// ##### RESPONSES ###### 
// ######################

message ReviewData {
	string app_id = 1;
	string review_id = 2;
	string language = 3;
	string review = 4;
	string timestamp_created = 5;
	string timestamp_updated = 6;
	string recommended = 7;
	string votes_helpful = 8;
	string author_steam_id = 9;
}

message ReviewDataResponse {
    repeated ReviewData reviews = 1;
}

message DeleteReviewResponse {
	bool status = 1;
}



// ######################
// ##### SERVICES ###### 
// ######################

// Services provided by the reviews microservice
service Reviews {
    rpc GetReview (ReviewByIdRequest) returns (ReviewData);
	rpc GetGameReviews (ReviewsByGameRequest) returns (ReviewDataResponse);
	rpc PutReview (UpdateReviewByIdRequest) returns (ReviewData);
	rpc DeleteReview (ReviewByIdRequest) returns (DeleteReviewResponse);
	rpc PutHelpfulReview (UpdateHelpfulOnReviewByIdRequest) returns (ReviewData);
	rpc GetReviewsByLanguage (ReviewsByLanguageRequest) returns (ReviewDataResponse);
	rpc GetReviewsByUser (ReviewsByUserIdRequest) returns (ReviewDataResponse);
	rpc GetReviewsByHelpful (ReviewsByHelpfulRequest) returns (ReviewDataResponse);
}
