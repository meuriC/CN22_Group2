# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import users_pb2 as users__pb2


class UsersStub(object):
    """######################
    ##### SERVICES #######
    ######################

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetUserById = channel.unary_unary(
                '/Users/GetUserById',
                request_serializer=users__pb2.IdRequest.SerializeToString,
                response_deserializer=users__pb2.UserData.FromString,
                )
        self.GetUserByUsername = channel.unary_unary(
                '/Users/GetUserByUsername',
                request_serializer=users__pb2.UsernameRequest.SerializeToString,
                response_deserializer=users__pb2.UserData.FromString,
                )
        self.CreateUser = channel.unary_unary(
                '/Users/CreateUser',
                request_serializer=users__pb2.CreateUserRequest.SerializeToString,
                response_deserializer=users__pb2.CreateUserResponse.FromString,
                )
        self.GetUsers = channel.unary_unary(
                '/Users/GetUsers',
                request_serializer=users__pb2.GetUsersRequest.SerializeToString,
                response_deserializer=users__pb2.UsersDataList.FromString,
                )
        self.DeleteUserByUsername = channel.unary_unary(
                '/Users/DeleteUserByUsername',
                request_serializer=users__pb2.UsernameRequest.SerializeToString,
                response_deserializer=users__pb2.DeletionResponse.FromString,
                )
        self.DeleteUserById = channel.unary_unary(
                '/Users/DeleteUserById',
                request_serializer=users__pb2.IdRequest.SerializeToString,
                response_deserializer=users__pb2.DeletionResponse.FromString,
                )


class UsersServicer(object):
    """######################
    ##### SERVICES #######
    ######################

    """

    def GetUserById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserByUsername(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUsers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteUserByUsername(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteUserById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UsersServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetUserById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserById,
                    request_deserializer=users__pb2.IdRequest.FromString,
                    response_serializer=users__pb2.UserData.SerializeToString,
            ),
            'GetUserByUsername': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserByUsername,
                    request_deserializer=users__pb2.UsernameRequest.FromString,
                    response_serializer=users__pb2.UserData.SerializeToString,
            ),
            'CreateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUser,
                    request_deserializer=users__pb2.CreateUserRequest.FromString,
                    response_serializer=users__pb2.CreateUserResponse.SerializeToString,
            ),
            'GetUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUsers,
                    request_deserializer=users__pb2.GetUsersRequest.FromString,
                    response_serializer=users__pb2.UsersDataList.SerializeToString,
            ),
            'DeleteUserByUsername': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteUserByUsername,
                    request_deserializer=users__pb2.UsernameRequest.FromString,
                    response_serializer=users__pb2.DeletionResponse.SerializeToString,
            ),
            'DeleteUserById': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteUserById,
                    request_deserializer=users__pb2.IdRequest.FromString,
                    response_serializer=users__pb2.DeletionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Users', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Users(object):
    """######################
    ##### SERVICES #######
    ######################

    """

    @staticmethod
    def GetUserById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Users/GetUserById',
            users__pb2.IdRequest.SerializeToString,
            users__pb2.UserData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserByUsername(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Users/GetUserByUsername',
            users__pb2.UsernameRequest.SerializeToString,
            users__pb2.UserData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Users/CreateUser',
            users__pb2.CreateUserRequest.SerializeToString,
            users__pb2.CreateUserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Users/GetUsers',
            users__pb2.GetUsersRequest.SerializeToString,
            users__pb2.UsersDataList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteUserByUsername(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Users/DeleteUserByUsername',
            users__pb2.UsernameRequest.SerializeToString,
            users__pb2.DeletionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteUserById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Users/DeleteUserById',
            users__pb2.IdRequest.SerializeToString,
            users__pb2.DeletionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
