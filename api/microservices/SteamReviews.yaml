---
swagger: "2.0"
info:
  description: API desenvolvida para Computação em Nuvem 2022
  version: 1.0.0
  title: Steam Reviews API
  contact:
    email: cngroup2@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /
#host: virtserver.swaggerhub.com
#basePath: /ComputacaoNuvem2022/StreamReviews/1.0.0
tags:
- name: Steam Service
  description: General logic of the system
- name: Reviews Service
  description: Manage the game reviews of steam
- name: Users Service
  description: Manage the users that review games on steam
- name: Games Service
  description: Manage the games of steam
- name: Authentication Service
  description: Manage the users of system
schemes:
- https
paths:
  /steam/recommendedgames:
    get:
      tags:
      - Steam Service
      summary: Get recommended games
      description: Get the top 10 games that were more recommended by the users
      operationId: api-steam.getRecommendedGames
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/GamesItem'
        "400":
          description: invalid input, object invalid
        "409":
          description: an existing item already exists
  /steam/activeusers:
    get:
      tags:
      - Steam Service
      summary: Get most active users
      description: Get the top 10 most active users
      operationId: api-steam.getActiveUsers
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/UserItem'
        "400":
          description: invalid input, object invalid
  /reviews/{id}:
    get:
      tags:
      - Reviews Service
      summary: Get review by id
      description: With this call you can get a specific review made in steam
      operationId: getReviewById
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      responses:
        "200":
          description: search results for the specific review
          schema:
            type: array
            items:
              $ref: '#/definitions/ReviewsItem'
        "400":
          description: couldn´t find any reviews
        "404":
          description: id not found
    put:
      tags:
      - Reviews Service
      summary: Updates an existing review
      description: Updates a review existing in the dataset
      operationId: updateReview
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      - in: body
        name: ReviewsItem
        description: Review to update
        required: false
        schema:
          $ref: '#/definitions/ReviewsItem'
      responses:
        "201":
          description: item updated
        "400":
          description: invalid id, object invalid
        "404":
          description: id not found
    delete:
      tags:
      - Reviews Service
      summary: Delete a review by it´s id
      description: Deletes a review from the dataset
      operationId: deleteReview
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      responses:
        "204":
          description: Successful deletion
        "404":
          description: Error id not found
        "401":
          description: Unauthorized
  /reviews/helpful/{id}:
    put:
      tags:
      - Reviews Service
      summary: Set Review as helpful
      description: Sets a specific review as helpful
      operationId: setReviewHelpful
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      - in: body
        name: ReviewsItem
        description: Review to set as Helpful
        required: false
        schema:
          $ref: '#/definitions/ReviewsItem'
      responses:
        "201":
          description: item updated
        "400":
          description: invalid id, object invalid
        "404":
          description: id not found
  /reviews/games/{id}/{language}:
    get:
      tags:
      - Reviews Service
      summary: Get game reviews by language
      description: With this call you can get all reviews in a game in a specific language
      operationId: getGameReviewsByLanguage
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      - name: language
        in: path
        required: true
        type: string
      responses:
        "200":
          description: search results for the specific review in the given language
          schema:
            type: array
            items:
              $ref: '#/definitions/ReviewsItem'
        "400":
          description: couldn´t find any reviews
        "404":
          description: id or language not found
  /reviews/filter/users/{id}:
    get:
      tags:
      - Reviews Service
      summary: Get all reviews from a specific user
      description: With this call you can get all the reviews that a specific user wrote
      operationId: userReviews
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      responses:
        "200":
          description: All reviews written by the user
          schema:
            type: array
            items:
              $ref: '#/definitions/ReviewsItem'
        "400":
          description: Couldn't find any reviews written by the user
        "404":
          description: user id not found
  /reviews/filter/helpful:
    get:
      tags:
      - Reviews Service
      summary: Get all the helpful reviews
      description: With this call you can get all reviews which were marked as helpful
      operationId: getReviewHelpful
      parameters: []
      responses:
        "200":
          description: search results for all the reviews which are helpful
          schema:
            type: array
            items:
              $ref: '#/definitions/ReviewsItem'
        "400":
          description: couldn´t find any helpful reviews
  /reviews/games/{id}:
    get:
      tags:
      - Reviews Service
      summary: Get all reviews of a game
      description: With this call you can get all reviews of a game
      operationId: getReviewByGame
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      responses:
        "200":
          description: search results for all the reviews with in a game
          schema:
            type: array
            items:
              $ref: '#/definitions/ReviewsItem'
        "400":
          description: couldn´t find any helpful reviews
  /users:
    post:
      tags:
      - Users Service
      summary: Creates or updates new User
      description: Creates a new user
      operationId: api-users.createUser
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: UserItem
        description: User to create
        required: false
        schema:
          $ref: '#/definitions/UserItem'
      responses:
        "201":
          description: user created
          schema:
            $ref: '#/definitions/UserItem'
        "202":
          description: user updated
        "400":
          description: invalid input, object invalid
  /users/{username}:
    get:
      tags:
      - Users Service
      summary: Get information about a specific user
      description: This call returns information about a specified username
      operationId: api-users.getUser
      parameters:
      - name: username
        in: path
        required: true
        type: integer
      responses:
        "200":
          description: information about a user
          schema:
            type: array
            items:
              $ref: '#/definitions/UserItem'
        "400":
          description: User id not found
    delete:
      tags:
      - Users Service
      summary: Delete account
      description: Deletes the account of the user
      operationId: api-users.deleteUserAccount
      parameters:
      - name: username
        in: path
        required: true
        type: string
      responses:
        "204":
          description: The account was deleted with success
        "404":
          description: Username not found
        "401":
          description: Unauthorized
  /users/{username}/games/{id}/reviews:
      post:
        tags:
        - Users Service
        summary: Creates a new Review
        description: Creates a new review
        operationId: createReview
        consumes:
        - application/json
        produces:
        - application/json
        parameters:
        - name: id
          in: path
          required: true
          type: integer
        - name: username
          in: path
          required: true
          type: string
        - in: body
          name: ReviewsItem
          description: Review to create
          required: false
          schema:
            $ref: '#/definitions/ReviewsItem'
        responses:
          "201":
            description: item created
          "400":
            description: invalid input, object invalid
          "409":
            description: an existing item already exists
  /auth/register:
    put:
      tags:
      - Authentication Service
      summary: Register a new User
      description: User sign up
      operationId: userRegister
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: UserItem
        description: User to create
        required: false
        schema:
          $ref: '#/definitions/UserAuthItem'
      responses:
        "201":
          description: user created
          schema:
            $ref: '#/definitions/UserAuthItem'
        "202":
          description: user updated
        "400":
          description: invalid input, object invalid
    delete:
      tags:
      - Authentication Service
      summary: Deletes account
      description: Deletes the account of the user from the authentication service
      operationId: userDeleteAccount
      consumes:
      - application/json
      parameters:
      - in: body
        name: UserItem
        description: User to delete
        required: false
        schema:
          $ref: '#/definitions/UserAuthItem'
      responses:
        "200":
          description: User account deleted successfully
        "400":
          description: Couldn't delete the account
  /auth/login:
    post:
      tags:
      - Authentication Service
      summary: User logs in
      description: User logs in
      operationId: userLogin
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: UserItem
        description: User to create
        required: false
        schema:
          $ref: '#/definitions/UserAuthItem'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TokenItem'
        "400":
          description: invalid username
        "404":
          description: username not found
  /auth/logout:
    delete:
      tags:
      - Authentication Service
      summary: Log out
      description: The user logs out of his account
      operationId: userLogOut
      consumes:
      - application/json
      parameters:
      - in: body
        name: UserItem
        description: User to create
        required: false
        schema:
          $ref: '#/definitions/TokenItem'
      responses:
        "200":
          description: User logged out successfully
        "400":
          description: Couldn't log out of the account
  /game/recommend/{id}:
    put:
      tags:
      - Games Service
      summary: Recommend a game
      description: Recommend the game based on the review status
      operationId: setRecommendTrue
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      - in: body
        name: ReviewsItem
        description: Set recommended to true or false
        required: false
        schema:
          $ref: '#/definitions/ReviewsItem'
      responses:
        "201":
          description: game recommended
        "400":
          description: invalid id, object invalid
        "404":
          description: id not found
  /game/{id}:
    get:
      tags:
      - Games Service
      summary: Search for a game
      description: The user gets the game he searched
      operationId: getSearchedGame
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      responses:
        "200":
          description: search for a game
          schema:
            type: array
            items:
              $ref: '#/definitions/GamesItem'
        "400":
          description: couldn't find any games with reviews
    delete:
      tags:
      - Games Service
      summary: Delete a game by it´s id
      description: Deletes a game from the dataset
      operationId: deleteGame
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      responses:
        "204":
          description: Successful deletion
        "404":
          description: Error id not found
        "401":
          description: Unauthorized
  /game:
    post:
      tags:
      - Games Service
      summary: Creates a new game on the list
      description: Creates a new game
      operationId: createGame
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: GamesItem
        description: Game to create
        required: false
        schema:
          $ref: '#/definitions/GamesItem'
      responses:
        "201":
          description: game created
        "400":
          description: invalid input, object invalid
        "409":
          description: an existing game already exists
definitions:
  UserItem:
    type: object
    required:
    - id
    - lastPlayed
    - numGames
    - reviewPlayTime
    - totalPlayTime
    - twoWeeksPlaytime
    properties:
      id:
        type: integer
        example: 76561198949504115
      numGames:
        type: integer
        example: 70
      totalPlayTime:
        type: number
        example: 300.7
      twoWeeksPlaytime:
        type: number
        example: 28.7
      reviewPlayTime:
        type: number
        example: 30.0
      lastPlayed:
        type: string
        example: 2/07/2020
  ReviewsItem:
    type: object
    required:
    - game
    - helpful
    - language
    - recommended
    - review
    properties:
      game:
        type: string
        example: FIFA 22
      language:
        type: string
        example: English
      review:
        type: string
        example: It's 2021. This is the first time I have played this. All of the good.
      recommended:
        type: boolean
        example: true
      helpful:
        type: boolean
        example: true
  GamesItem:
    type: object
    required:
    - game
    - mostCommonLanguage
    - numberOfReviews
    - recommendedPercentage
    properties:
      game:
        type: string
        example: Fifa 22
      numberOfReviews:
        type: integer
        example: 1
      mostCommonLanguage:
        type: string
        example: english
      recommendedPercentage:
        type: string
        example: 100%
  UserAuthItem:
      type: object
      required:
      - username
      - password
      properties:
        username:
          type: string
          example: userguest1
        password:
          type: string
          example: password
  TokenItem:
      type: object
      required:
      - token
      properties:
        token:
          type: string
          example: ibsufbaw32432-isufaiefawfg-234234nkawf